<!doctype html> 
<html lang="en">
<head>
    <!-- Required meta tags -->
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <link rel="shortcut icon" type="image/x-icon" href="#" />

    <!-- Libs CSS -->
    <link rel="preconnect" href="https://fonts.googleapis.com/" />
    <link rel="preconnect" href="https://fonts.gstatic.com/" crossorigin />
    <link rel="stylesheet" href="https://fonts.googleapis.com/css2?family=Inter:wght@100;200;300;400;500;600;700;800;900&amp;display=swap" />
    <link rel="stylesheet" href="../../../cdn.jsdelivr.net/npm/%40tabler/icons-webfont%402.46.0/tabler-icons.min.css" />

    <!-- Theme CSS -->
    <style>
    /* Table Styling */
.table {
    width: 100%;
    border-collapse: separate;
    border-spacing: 0;
    background-color: #fff;
    border-radius: 10px;
    overflow: hidden;
    box-shadow: 0px 3px 10px rgba(0, 0, 0, 0.08);
}
/* Table Header */
thead {
    background-color: #000;  /* Black background */
    color: #fff;  /* White text */
    text-align: center;
    font-size: 16px;
    font-weight: 600;
}

thead th {
    padding: 14px;
    white-space: nowrap;
}


tbody tr {
    transition: background-color 0.2s ease-in-out;
}

tbody tr:hover {
    background-color: #f8f9fa;
}

td {
    padding: 12px;
    text-align: center;
    border-bottom: 1px solid #ddd;
    font-size: 14px;
}

td img {
    border-radius: 6px;
    box-shadow: 2px 2px 5px rgba(0, 0, 0, 0.1);
}

/* Button Styling */
.btn {
    padding: 8px 12px;
    font-size: 14px;
    font-weight: 500;
    border-radius: 6px;
    transition: all 0.3s ease-in-out;
}

.btn-primary {
    background-color: #815d3bfd;
    border-color: #72553a;
    color: #fff;
}

.btn-danger {
    background-color: #dc3545;
    border-color: #dc3545;
    color: #fff;
}

.btn-success {
    background-color: #28a745;
    border-color: #28a745;
    color: #fff;
}

/* Status Button */
.list-toggle {
    font-size: 13px;
    padding: 6px 10px;
    border-radius: 5px;
    font-weight: 600;
}

/* Responsive */
@media (max-width: 1024px) {
    .table {
        display: block;
        overflow-x: auto;
        white-space: nowrap;
    }
}
</style>
    <link rel="stylesheet" href="/public/styles/adminSideBar.css">
    <title>Casa Vogue - Admin</title>
</head>
<!DOCTYPE html>
<html lang="en">
    <head>
        <meta charset="UTF-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>Products</title>
        <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/css/bootstrap.min.css">
        <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
        <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    </head>
    
<body>
    <div class="main-wrapper">
        <!-- Sidebar -->
        <%- include('./partials/sidebar') %>

        <!-- Content -->
        <div class="container my-4">
            <h1 class="mb-3">Product List</h1>
            <div class="d-flex justify-content-between align-items-center mb-4">
                <div class="d-flex">
                    <input class="form-control me-2 w-75" type="text" name="search" placeholder="Search Products..." id="product-search">
                    <button class="btn btn-dark">üîç</button>
                </div>
                <a href="/add-product">
                    <button class="btn btn-success">Add New Product</button>
                </a>
            </div>

            <!-- Product Table -->
            <table class="table table-bordered table-hover">
                <thead>
                    <tr>
                        <th>Product Name</th>
                        <th>Category</th>
                        <th>Material</th>
                        <th>Description</th>
                        <th>Image-1</th>
                        <th>Image-2</th>
                        <th>Image-3</th>
                        <th>Style</th>
                        <th>Price</th>
                        <th>Actions</th>
                        <th>Status</th>
                    </tr>
                </thead>
                <tbody>
                    <% products.forEach(product => { %>
                        <tr id="product-row-<%= product._id %>">
                            <td><%= product.productName %></td>
                            <td><%= product?.category_id?.categoryName %></td>
                            <td><%= product.productMaterial %></td>
                            <td><%= product.description %></td>
                            <td><img src="<%= product.images[0] %>" width="50"></td>
                            <td><img src="<%= product.images[1] %>" width="50"></td>
                            <td><img src="<%= product.images[2] %>" width="50"></td>
                            <td><%= product.productStyle %></td>
                            <td>$<%= product.price %></td>
                            <td>
                                <a href="/product/edit/<%= product._id %>" class="btn btn-primary">Edit</a>
                                <button class="btn btn-danger" onclick="deleteProduct('<%= product._id %>')">Delete</button>
                            </td>
                            <td>
                                <% if (product.isListed) { %>
                                    <button class="btn btn-danger list-toggle" data-id="<%= product._id %>" data-action="unlist">Unlist</button>
                                <% } else { %>
                                    <button class="btn btn-success list-toggle" data-id="<%= product._id %>" data-action="list">List</button>
                                <% } %>
                            </td>
                        </tr>
                    <% }); %>
                </tbody>
            </table>
        </div>
    </div>    

    <!-- modal -->
    <div class="modal fade" id="updateProductModal" tabindex="-1" aria-labelledby="updateProductModalLabel" aria-hidden="true">
        <div class="modal-dialog modal-lg">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="updateProductModalLabel">Update Product</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <form id="updateProductForm">
                        <input type="hidden" id="productId" name="productId">
                        
                        <div class="mb-3">
                            <label for="productName" class="form-label">Product Name</label>
                            <input type="text" class="form-control" id="productName" name="productName">
                        </div>
    
                        <div class="mb-3">
                            <label for="category_id" class="form-label">Category</label>
                            <select class="form-control" id="category_id" name="category_id">
                                <% categories.forEach(category => { %>
                                    <option value="<%= category._id %>"><%= category.categoryName %></option>
                                <% }); %>
                            </select>
                        </div>
    
                        <div class="mb-3">
                            <label for="productMaterial" class="form-label">Material</label>
                            <input type="text" class="form-control" id="productMaterial" name="productMaterial">
                        </div>
    
                        <div class="mb-3">
                            <label for="description" class="form-label">Description</label>
                            <textarea class="form-control" id="description" name="description"></textarea>
                        </div>
    
                        <div class="mb-3">
                            <label for="productStyle" class="form-label">Style</label>
                            <input type="text" class="form-control" id="productStyle" name="productStyle">
                        </div>
    
                        <div class="mb-3">
                            <label for="price" class="form-label">Price ($)</label>
                            <input type="number" class="form-control" id="price" name="price" step="0.01">
                        </div>
    
                        <div class="mb-3">
                            <label for="isListed" class="form-label">Is Listed</label>
                            <select class="form-control" id="isListed" name="isListed">
                                <option value="true">Yes</option>
                                <option value="false">No</option>
                            </select>
                        </div>
    
                        <div class="mb-3">
                            <label for="productImages" class="form-label">Product Images</label>
                            <input type="file" class="form-control" name="productImages" id="productImages" accept="image/*" multiple>
                        </div>
    
                    </form>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                    <button type="submit" class="btn btn-primary" id="submitUpdateProductForm">Update Product</button>
                </div>
            </div>
        </div>
    </div>
    
        <script>
            async function deleteProduct(productId) {
                Swal.fire({
                    title: "Are you sure?",
                    text: "You won't be able to undo this!",
                    icon: "warning",
                    showCancelButton: true,
                    confirmButtonText: "Yes, delete it",
                    cancelButtonText: "Cancel"
                }).then(async (result) => {
                    if (result.isConfirmed) {
                        try {
                            const response = await fetch(`/admin/products/delete/${productId}`, {
                                method: "DELETE"
                            });
            
                            if (response.ok) {
                                Swal.fire("Deleted!", "The product has been deleted.", "success");
                                setTimeout(() => location.reload(), 1000);
                            } else {
                                Swal.fire("Error", "Failed to delete product", "error");
                            }
                        } catch (error) {
                            Swal.fire("Error", "Something went wrong", "error");
                        }
                    }
                });
            }        
        </script>
        <script>
            function openUpdateProductModal(product) {
                document.getElementById("productId").value = product._id;
                document.getElementById("productName").value = product.productName;
                document.getElementById("category_id").value = product.category_id._id;
                document.getElementById("productMaterial").value = product.productMaterial;
                document.getElementById("description").value = product.description;
                document.getElementById("productStyle").value = product.productStyle;
                document.getElementById("price").value = product.price;
                document.getElementById("isListed").value = product.isListed.toString();
            
                new bootstrap.Modal(document.getElementById("updateProductModal")).show();
            }            
        </script>
        <script>
            document.getElementById("submitUpdateProductForm").addEventListener("click", async function () {
                const formData = new FormData(document.getElementById("updateProductForm"));
                const productId = document.getElementById("productId").value;
            
                try {
                    const response = await fetch(`/admin/products/update/${productId}`, {
                        method: "PUT",
                        body: formData
                    });
            
                    const result = await response.json();
            
                    if (result.success) {
                        Swal.fire("Updated!", "Product updated successfully.", "success").then(() => {
                            location.reload();
                        });
                    } else {
                        Swal.fire("Error", "Failed to update product", "error");
                    }
                } catch (error) {
                    Swal.fire("Error", "Something went wrong", "error");
                }
            });         
        </script>
    </body>
</html>